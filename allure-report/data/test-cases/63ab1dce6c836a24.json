{"uid":"63ab1dce6c836a24","name":"test_localization_room_types[Locale test for lang=ja]","fullName":"tests.test_roomtypes.TestRoomTypes#test_localization_room_types","historyId":"fd16b55774d7f0312e86733e347b69aa","time":{"start":1747906460099,"stop":1747906460164,"duration":65},"status":"failed","statusMessage":"AssertionError: Поле 'name_ja' найдено, но все значения пустые","statusTrace":"self = <test_roomtypes.TestRoomTypes object at 0x000001AC39477230>, lang = 'ja', expected_field = 'name_ja'\n\n    @pytest.mark.parametrize(\n        \"lang, expected_field\",\n        [\n            (\"ru\", \"name_ru\"),\n            (\"en\", \"name_en\"),\n            (\"de\", \"name_de\"),\n            (\"zh\", \"name_zh\"),\n            (\"es\", \"name_es\"),\n            (\"fr\", \"name_fr\"),\n            (\"ja\", \"name_ja\"),\n            (\"it\", \"name_it\"),\n            (\"ko\", \"name_ko\"),\n            (\"pl\", \"name_pl\"),\n            (\"fi\", \"name_fi\"),\n            (\"lt\", \"name_lt\"),\n            (\"ro\", \"name_ro\"),\n            (\"lv\", \"name_lv\"),\n            (\"uk\", \"name_uk\"),\n            (\"hy\", \"name_hy\"),\n        ],\n        ids=[\n            f\"Locale test for lang={lang}\"\n            for lang in [\n                \"ru\",\n                \"en\",\n                \"de\",\n                \"zh\",\n                \"es\",\n                \"fr\",\n                \"ja\",\n                \"it\",\n                \"ko\",\n                \"pl\",\n                \"fi\",\n                \"lt\",\n                \"ro\",\n                \"lv\",\n                \"uk\",\n                \"hy\",\n            ]\n        ],\n    )\n    @allure.story(\"Локализация категорий по Accept-Language\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_localization_room_types(self, lang, expected_field):\n        headers = {\"Accept-Language\": lang}\n        with allure.step(\"Отправить запрос на получение данных о категориях номеров\"):\n            response = self.api.get_roomtypes(\n                account_id=535, address_included=1, headers=headers\n            )\n        with allure.step(\"Проверка статус кода\"):\n            assert_status_code(response, 200)\n        with allure.step(f\"Проверка, что поле '{expected_field}' не пустое\"):\n>           assert_field_is_not_empty(response, expected_field)\n\ntests\\test_roomtypes.py:142: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, field = 'name_ja'\n\n    def assert_field_is_not_empty(response: Response, field):\n        \"\"\"\n        Проверяет, что поле с заданным именем не пустое.\n    \n        :param response: requests.Response\n        :param field: Название поля (например, \"name_ru\")\n        :raises AssertionError: Если поле отсутствует или все его значения пустые\n        \"\"\"\n        data = response.json()[\"rooms\"]\n        items = data if isinstance(data, list) else [data]\n        values = []\n    \n        for item in items:\n            if isinstance(item, dict) and field in item:\n                values.append(item.get(field))\n    \n        assert values, f\"Поле '{field}' не найдено ни в одном элементе\"\n>       assert any(\n            v not in (None, \"\", [], {}) for v in values\n        ), f\"Поле '{field}' найдено, но все значения пустые\"\nE       AssertionError: Поле 'name_ja' найдено, но все значения пустые\n\nassertions\\roomtypes_assertions.py:21: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1747906460098,"stop":1747906460098,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: Поле 'name_ja' найдено, но все значения пустые","statusTrace":"self = <test_roomtypes.TestRoomTypes object at 0x000001AC39477230>, lang = 'ja', expected_field = 'name_ja'\n\n    @pytest.mark.parametrize(\n        \"lang, expected_field\",\n        [\n            (\"ru\", \"name_ru\"),\n            (\"en\", \"name_en\"),\n            (\"de\", \"name_de\"),\n            (\"zh\", \"name_zh\"),\n            (\"es\", \"name_es\"),\n            (\"fr\", \"name_fr\"),\n            (\"ja\", \"name_ja\"),\n            (\"it\", \"name_it\"),\n            (\"ko\", \"name_ko\"),\n            (\"pl\", \"name_pl\"),\n            (\"fi\", \"name_fi\"),\n            (\"lt\", \"name_lt\"),\n            (\"ro\", \"name_ro\"),\n            (\"lv\", \"name_lv\"),\n            (\"uk\", \"name_uk\"),\n            (\"hy\", \"name_hy\"),\n        ],\n        ids=[\n            f\"Locale test for lang={lang}\"\n            for lang in [\n                \"ru\",\n                \"en\",\n                \"de\",\n                \"zh\",\n                \"es\",\n                \"fr\",\n                \"ja\",\n                \"it\",\n                \"ko\",\n                \"pl\",\n                \"fi\",\n                \"lt\",\n                \"ro\",\n                \"lv\",\n                \"uk\",\n                \"hy\",\n            ]\n        ],\n    )\n    @allure.story(\"Локализация категорий по Accept-Language\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_localization_room_types(self, lang, expected_field):\n        headers = {\"Accept-Language\": lang}\n        with allure.step(\"Отправить запрос на получение данных о категориях номеров\"):\n            response = self.api.get_roomtypes(\n                account_id=535, address_included=1, headers=headers\n            )\n        with allure.step(\"Проверка статус кода\"):\n            assert_status_code(response, 200)\n        with allure.step(f\"Проверка, что поле '{expected_field}' не пустое\"):\n>           assert_field_is_not_empty(response, expected_field)\n\ntests\\test_roomtypes.py:142: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, field = 'name_ja'\n\n    def assert_field_is_not_empty(response: Response, field):\n        \"\"\"\n        Проверяет, что поле с заданным именем не пустое.\n    \n        :param response: requests.Response\n        :param field: Название поля (например, \"name_ru\")\n        :raises AssertionError: Если поле отсутствует или все его значения пустые\n        \"\"\"\n        data = response.json()[\"rooms\"]\n        items = data if isinstance(data, list) else [data]\n        values = []\n    \n        for item in items:\n            if isinstance(item, dict) and field in item:\n                values.append(item.get(field))\n    \n        assert values, f\"Поле '{field}' не найдено ни в одном элементе\"\n>       assert any(\n            v not in (None, \"\", [], {}) for v in values\n        ), f\"Поле '{field}' найдено, но все значения пустые\"\nE       AssertionError: Поле 'name_ja' найдено, но все значения пустые\n\nassertions\\roomtypes_assertions.py:21: AssertionError","steps":[{"name":"Отправить запрос на получение данных о категориях номеров","time":{"start":1747906460099,"stop":1747906460163,"duration":64},"status":"passed","steps":[{"name":"GET-запрос: 'https://public-api.reservationsteps.ru/v1/api//roomtypes'","time":{"start":1747906460099,"stop":1747906460163,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"path","value":"'https://public-api.reservationsteps.ru/v1/api//roomtypes'"},{"name":"params","value":"{'account_id': 535, 'address_included': 1}"},{"name":"headers","value":"{'Accept-Language': 'ja'}"}],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Проверка статус кода","time":{"start":1747906460163,"stop":1747906460163,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Проверка, что поле 'name_ja' не пустое","time":{"start":1747906460163,"stop":1747906460164,"duration":1},"status":"failed","statusMessage":"AssertionError: Поле 'name_ja' найдено, но все значения пустые\n","statusTrace":"  File \"C:\\Users\\nocomply\\PycharmProjects\\bnovo_test\\tests\\test_roomtypes.py\", line 142, in test_localization_room_types\n    assert_field_is_not_empty(response, expected_field)\n  File \"C:\\Users\\nocomply\\PycharmProjects\\bnovo_test\\assertions\\roomtypes_assertions.py\", line 21, in assert_field_is_not_empty\n    assert any(\n           ^^^^\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Получение данных о категориях номеров"},{"name":"story","value":"Локализация категорий по Accept-Language"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_roomtypes"},{"name":"subSuite","value":"TestRoomTypes"},{"name":"host","value":"KOMPUTER"},{"name":"thread","value":"20976-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_roomtypes"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_field","value":"'name_ja'"},{"name":"lang","value":"'ja'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"63ab1dce6c836a24.json","parameterValues":["'name_ja'","'ja'"]}