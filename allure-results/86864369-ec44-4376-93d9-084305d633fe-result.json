{"name": "test_get_room_types_invalid_params[Invalid data type account_id]", "status": "failed", "statusDetails": {"message": "AssertionError: ('Ожидался 400 статус-код, но в ответе 500', 'https://public-api.reservationsteps.ru/v1/api//roomtypes?account_id=string&address_included=1', \"{'code': 500, 'message': 'Internal error, our staff is notified'}\")", "trace": "self = <test_roomtypes.TestRoomTypes object at 0x000001AC39476600>, account_id = 'string', address_included = 1\n\n    @pytest.mark.parametrize(\n        \"account_id, address_included\",\n        [(\"string\", 1), (535, 2), (535, \"string\"), (535, -1)],\n        ids=[\n            \"Invalid data type account_id\",\n            \"Not valid address_included\",\n            \"Invalid data type address_included\",\n            \"Negative int address_included\",\n        ],\n    )\n    @allure.story(\"Получение данных о категориях номеров c невалидными параметрами\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_get_room_types_invalid_params(self, account_id, address_included):\n        with allure.step(\"Отправить запрос на получение данных о категориях номеров\"):\n            response = self.api.get_roomtypes(\n                account_id=account_id, address_included=address_included\n            )\n        with allure.step(\"Проверка статус кода ответа\"):\n>           assert_status_code(response, 400)\n\ntests\\test_roomtypes.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_code = 400\n\n    def assert_status_code(response: Response, expected_code):\n        \"\"\"\n        Сравнивает код ответа от сервера с ожидаемым\n    \n        :param response: полученный от сервера ответ\n        :param expected_code: ожидаемый код ответа\n        :raises AssertionError: если значения не совпали\n        \"\"\"\n>       assert expected_code == response.status_code, (\n            f\"Ожидался {expected_code} статус-код, но в ответе {response.status_code}\",\n            f\"{response.url}\",\n            f\"{response.json()}\",\n        )\nE       AssertionError: ('Ожидался 400 статус-код, но в ответе 500', 'https://public-api.reservationsteps.ru/v1/api//roomtypes?account_id=string&address_included=1', \"{'code': 500, 'message': 'Internal error, our staff is notified'}\")\n\nassertions\\assertions.py:51: AssertionError"}, "steps": [{"name": "Отправить запрос на получение данных о категориях номеров", "status": "passed", "steps": [{"name": "GET-запрос: 'https://public-api.reservationsteps.ru/v1/api//roomtypes'", "status": "passed", "parameters": [{"name": "path", "value": "'https://public-api.reservationsteps.ru/v1/api//roomtypes'"}, {"name": "params", "value": "{'account_id': 'string', 'address_included': 1}"}, {"name": "headers", "value": "None"}], "start": 1747906459264, "stop": 1747906459377}], "start": 1747906459264, "stop": 1747906459377}, {"name": "Проверка статус кода ответа", "status": "failed", "statusDetails": {"message": "AssertionError: ('Ожидался 400 статус-код, но в ответе 500', 'https://public-api.reservationsteps.ru/v1/api//roomtypes?account_id=string&address_included=1', \"{'code': 500, 'message': 'Internal error, our staff is notified'}\")\n", "trace": "  File \"C:\\Users\\nocomply\\PycharmProjects\\bnovo_test\\tests\\test_roomtypes.py\", line 85, in test_get_room_types_invalid_params\n    assert_status_code(response, 400)\n  File \"C:\\Users\\nocomply\\PycharmProjects\\bnovo_test\\assertions\\assertions.py\", line 51, in assert_status_code\n    assert expected_code == response.status_code, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1747906459377, "stop": 1747906459377}], "parameters": [{"name": "account_id", "value": "'string'"}, {"name": "address_included", "value": "1"}], "start": 1747906459264, "stop": 1747906459378, "uuid": "d6930193-6447-441c-9812-7bc09ad78480", "historyId": "5400a976e303fecd5c20959b69fac1f9", "testCaseId": "a8246dde5e4ed4fe7aa3a273c4269a40", "fullName": "tests.test_roomtypes.TestRoomTypes#test_get_room_types_invalid_params", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Получение данных о категориях номеров"}, {"name": "story", "value": "Получение данных о категориях номеров c невалидными параметрами"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_roomtypes"}, {"name": "subSuite", "value": "TestRoomTypes"}, {"name": "host", "value": "KOMPUTER"}, {"name": "thread", "value": "20976-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_roomtypes"}]}