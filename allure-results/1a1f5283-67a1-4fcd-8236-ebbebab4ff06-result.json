{"name": "test_get_plans_invalid_account_id", "status": "failed", "statusDetails": {"message": "AssertionError: ('Ожидался 400 статус-код, но в ответе 500', 'https://public-api.reservationsteps.ru/v1/api//plans?account_id=string', \"{'code': 500, 'message': 'Internal error, our staff is notified'}\")", "trace": "self = <test_plans.TestPlans object at 0x000001AC394745C0>\n\n    @allure.story(\"Получение данных о тарифах с невалидным account_id\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_get_plans_invalid_account_id(self):\n        with allure.step(\"Отправить запрос на получение данных о тарифах\"):\n            response = self.api.get_plans(account_id=\"string\")\n        with allure.step(\"Проверка статус кода ответа\"):\n>           assert_status_code(response, 400)\n\ntests\\test_plans.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_code = 400\n\n    def assert_status_code(response: Response, expected_code):\n        \"\"\"\n        Сравнивает код ответа от сервера с ожидаемым\n    \n        :param response: полученный от сервера ответ\n        :param expected_code: ожидаемый код ответа\n        :raises AssertionError: если значения не совпали\n        \"\"\"\n>       assert expected_code == response.status_code, (\n            f\"Ожидался {expected_code} статус-код, но в ответе {response.status_code}\",\n            f\"{response.url}\",\n            f\"{response.json()}\",\n        )\nE       AssertionError: ('Ожидался 400 статус-код, но в ответе 500', 'https://public-api.reservationsteps.ru/v1/api//plans?account_id=string', \"{'code': 500, 'message': 'Internal error, our staff is notified'}\")\n\nassertions\\assertions.py:51: AssertionError"}, "steps": [{"name": "Отправить запрос на получение данных о тарифах", "status": "passed", "steps": [{"name": "GET-запрос: 'https://public-api.reservationsteps.ru/v1/api//plans'", "status": "passed", "parameters": [{"name": "path", "value": "'https://public-api.reservationsteps.ru/v1/api//plans'"}, {"name": "params", "value": "{'account_id': 'string'}"}, {"name": "headers", "value": "None"}], "start": 1747906458515, "stop": 1747906458635}], "start": 1747906458515, "stop": 1747906458635}, {"name": "Проверка статус кода ответа", "status": "failed", "statusDetails": {"message": "AssertionError: ('Ожидался 400 статус-код, но в ответе 500', 'https://public-api.reservationsteps.ru/v1/api//plans?account_id=string', \"{'code': 500, 'message': 'Internal error, our staff is notified'}\")\n", "trace": "  File \"C:\\Users\\nocomply\\PycharmProjects\\bnovo_test\\tests\\test_plans.py\", line 48, in test_get_plans_invalid_account_id\n    assert_status_code(response, 400)\n  File \"C:\\Users\\nocomply\\PycharmProjects\\bnovo_test\\assertions\\assertions.py\", line 51, in assert_status_code\n    assert expected_code == response.status_code, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1747906458635, "stop": 1747906458635}], "start": 1747906458515, "stop": 1747906458636, "uuid": "553b0a23-d999-445f-99c3-8bdfc32ab913", "historyId": "c0b41ef58be67a5669ee13d0ee94b048", "testCaseId": "c0b41ef58be67a5669ee13d0ee94b048", "fullName": "tests.test_plans.TestPlans#test_get_plans_invalid_account_id", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Получение данных о тарифах"}, {"name": "story", "value": "Получение данных о тарифах с невалидным account_id"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_plans"}, {"name": "subSuite", "value": "TestPlans"}, {"name": "host", "value": "KOMPUTER"}, {"name": "thread", "value": "20976-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_plans"}]}